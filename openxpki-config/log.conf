
## This is Log::Log4perl configuration.
##
## Please be careful if you change this and
## please always test all changes.

## The example configuration configures the log for all
## loggers/facilities.

# Catch-all root logger
log4perl.rootLogger = ERROR, CatchAll

# The workflow base logger -
log4perl.logger.Workflow = WARN, Logfile

## FACILITY: AUTH
# Anything related to logging into the system
log4perl.category.openxpki.auth = INFO, Logfile

## FACILITY: AUDIT
# mainly usage and access of private key material or secrets
log4perl.category.openxpki.audit = INFO, AuditDBI, AuditFile

## FACILITY: SYSTEM
# internal system management like forking/ending process and usage of
# system components such as notification or crypto backend
# NEVER use the OpenXPKI::DBI logger as target for system, see #223
log4perl.category.openxpki.system = WARN, Logfile

## FACILITY: WORKFLOW
# INTERNAL logger for the workflow engine, conditions evaluated, actions taken
# This must not be used by implementors, log your stuff to APPLICATION!
log4perl.category.openxpki.workflow = WARN, Logfile

## FACILITY: APPLICATION
# info about the workflows, conditions evaluated, actions taken
log4perl.category.openxpki.application = INFO, ApplicationFile, ApplicationDBI

## FACILITY: DEPRECATED
# receives messages when deprecated code is called
# Errors and warnings should be handled immediatly,
# lower levels are mainly for development and debugging
log4perl.category.openxpki.deprecated = WARN, Deprecated

## FACILITY: Connector (outside OXI!)
# internal logging of the config layer, errors indicate missconfiguration
log4perl.category.connector = ERROR, Logfile

## Appenders are the modules which do the real work. Different
## facilities/loggers can use the same appenders.

log4perl.filter.FilterIsWorkflow               = Log::Log4perl::Filter::MDC
log4perl.filter.FilterIsWorkflow.KeyToMatch    = wfid
log4perl.filter.FilterIsWorkflow.RegexToMatch  = \d+

log4perl.appender.Logfile          = Log::Log4perl::Appender::File
# add user and group to force correct permissions for log files created
# before the privileges are dropped
log4perl.appender.Logfile.owner    = openxpki
log4perl.appender.Logfile.group    = openxpki
# logrotate (with delaycompress) moves the open filehandle with
# with recreate the handle is released and a new file is created
log4perl.appender.Logfile.recreate = 1
log4perl.appender.Logfile.recreate_check_interval = 120
log4perl.appender.Logfile.filename = /var/log/openxpki/openxpki.log
log4perl.appender.Logfile.layout   = Log::Log4perl::Layout::PatternLayout
log4perl.appender.Logfile.layout.ConversionPattern = %d %p %m [pid=%P|%i]%n
log4perl.appender.Logfile.syswrite  = 1
log4perl.appender.Logfile.utf8 = 1

log4perl.appender.CatchAll          = Log::Log4perl::Appender::File
log4perl.appender.CatchAll.owner    = openxpki
log4perl.appender.CatchAll.group    = openxpki
log4perl.appender.CatchAll.recreate = 1
log4perl.appender.CatchAll.recreate_check_interval = 120
log4perl.appender.CatchAll.filename = /var/log/openxpki/catchall.log
log4perl.appender.CatchAll.layout   = Log::Log4perl::Layout::PatternLayout
log4perl.appender.CatchAll.layout.ConversionPattern = %d %c.%p %m [pid=%P|%i]%n
log4perl.appender.CatchAll.syswrite  = 1
log4perl.appender.CatchAll.utf8 = 1

log4perl.appender.ApplicationDBI          = OpenXPKI::Server::Log::Appender::Database
log4perl.appender.ApplicationDBI.Filter   = FilterIsWorkflow
log4perl.appender.ApplicationDBI.layout   = Log::Log4perl::Layout::PatternLayout
log4perl.appender.ApplicationDBI.layout.ConversionPattern = %m (%X{user})
log4perl.appender.ApplicationDBI.table = application_log
log4perl.appender.ApplicationDBI.microseconds = 1

log4perl.appender.ApplicationFile         = Log::Log4perl::Appender::File
log4perl.appender.ApplicationFile.owner    = openxpki
log4perl.appender.ApplicationFile.group    = openxpki
log4perl.appender.ApplicationFile.recreate = 1
log4perl.appender.ApplicationFile.recreate_check_interval = 120
log4perl.appender.ApplicationFile.Filter   = FilterIsWorkflow
log4perl.appender.ApplicationFile.filename = /var/log/openxpki/workflows.log
log4perl.appender.ApplicationFile.layout   = Log::Log4perl::Layout::PatternLayout
log4perl.appender.ApplicationFile.layout.ConversionPattern = %d %X{wfid} %m %n
log4perl.appender.ApplicationFile.syswrite  = 1
log4perl.appender.ApplicationFile.utf8 = 1

log4perl.appender.AuditDBI = OpenXPKI::Server::Log::Appender::Audit
log4perl.appender.AuditDBI.layout = OpenXPKI::Server::Log::Layout::Audit
log4perl.appender.AuditDBI.warp_message = 0

log4perl.appender.AuditFile = Log::Log4perl::Appender::File
log4perl.appender.AuditFile.owner = openxpki
log4perl.appender.AuditFile.group = openxpki
log4perl.appender.AuditFile.recreate = 1
log4perl.appender.AuditFile.recreate_check_interval = 120
log4perl.appender.AuditFile.layout = OpenXPKI::Server::Log::Layout::Audit
log4perl.appender.AuditFile.filename = /var/log/openxpki/audit.log
log4perl.appender.AuditFile.layout.ConversionPattern = %d %c.%p %m [pid=%P|%i]%n
log4perl.appender.AuditFile.syswrite  = 1
log4perl.appender.AuditFile.utf8 = 1
log4perl.appender.AuditFile.warp_message = 0

log4perl.appender.Deprecated          = Log::Log4perl::Appender::File
log4perl.appender.Deprecated.owner    = openxpki
log4perl.appender.Deprecated.group    = openxpki
log4perl.appender.Deprecated.recreate = 1
log4perl.appender.Deprecated.recreate_check_interval = 120
log4perl.appender.Deprecated.filename = /var/log/openxpki/deprecated.log
log4perl.appender.Deprecated.layout   = Log::Log4perl::Layout::PatternLayout
log4perl.appender.Deprecated.syswrite  = 1
