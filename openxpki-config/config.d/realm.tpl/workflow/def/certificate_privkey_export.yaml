head:
    prefix: exportprivkey
    label: I18N_OPENXPKI_UI_WORKFLOW_TYPE_EXPORT_PRIVATEKEY_LABEL
    description: I18N_OPENXPKI_UI_WORKFLOW_TYPE_EXPORT_PRIVATEKEY_DESC
# If you use a persister, every download creates a workflow which is handy
# for audit but increases your database size. Persistance is also required
# to have the error handling loop using the FAILED state. so if you decide
# to make this volatile, please use "FAILURE" as action target in EXPORT.
#    persister: Volatile

state:
    INITIAL:
        action:
          - initialize global_relate_workflow > CHECKACCESS

    CHECKACCESS:
        autorun: 1
        action:
          - generate > EXPORT ? global_is_certificate_owner
          - global_set_error_rejected > FAILURE ? !global_is_certificate_owner

    EXPORT:
        autorun: 1
        action:
            - setfile_pkcs12 > SUCCESS ? is_pkcs12 key_exists
            - setfile_pkcs8_pem > SUCCESS ? is_pkcs8_pem key_exists
            - setfile_pkcs8_der > SUCCESS ? is_pkcs8_der key_exists
            - setfile_java_keystore > SUCCESS ? is_java_keystore key_exists
            - setfile_openssl_privkey > SUCCESS ? is_openssl_privkey key_exists
            - global_set_error_export_private_key_failed > FAILED ? !key_exists

    FAILED:
        label: I18N_OPENXPKI_UI_WORKFLOW_STATE_EXPORT_PRIVATEKEY_RETRY_PASSWORD_LABEL
        description: I18N_OPENXPKI_UI_WORKFLOW_STATE_EXPORT_PRIVATEKEY_RETRY_PASSWORD_DESC
        action:
         - retry_password > CHECKACCESS
         - global_noop > CANCELED
        output:
          - error_code
        button:
          retry_password:
            format: expected
            label: I18N_OPENXPKI_UI_WORKFLOW_EXPORT_PRIVATEKEY_RETRY_PASSWORD_BUTTON_LABEL
          global_noop:
            format: failure
            label: I18N_OPENXPKI_UI_WORKFLOW_ACTION_GLOBAL_CANCEL_LABEL

    FAILURE:
        label: I18N_OPENXPKI_UI_WORKFLOW_STATE_EXPORT_PRIVATEKEY_FAILURE_LABEL
        description: I18N_OPENXPKI_UI_WORKFLOW_STATE_EXPORT_PRIVATEKEY_FAILURE_DESC
        output:
          - cert_identifier
          - error_code

    SUCCESS:
        label: I18N_OPENXPKI_UI_WORKFLOW_STATE_EXPORT_PRIVATEKEY_SUCCESS_LABEL
        description: I18N_OPENXPKI_UI_WORKFLOW_STATE_EXPORT_PRIVATEKEY_SUCCESS_DESC
        output:
         - cert_identifier
         - key_format
         - download

    CANCELED:
        label: I18N_OPENXPKI_UI_WORKFLOW_STATE_CANCELED_LABEL
        description: I18N_OPENXPKI_UI_WORKFLOW_STATE_CANCELED_DESC
        output:
          - cert_identifier

action:
    initialize:
        class: OpenXPKI::Server::Workflow::Activity::Noop
        label: I18N_OPENXPKI_UI_WORKFLOW_ACTION_EXPORT_PRIVATEKEY_INITIALIZE_LABEL
        description: I18N_OPENXPKI_UI_WORKFLOW_ACTION_EXPORT_PRIVATEKEY_INITIALIZE_DESC
        input:
          - cert_identifier_hidden
          - key_format
          - _password
          - export_password
          - unencrypted
          - alias
        validator:
          - global_cert_identifier_exists
          - keystore_alias

    generate:
        class: OpenXPKI::Server::Workflow::Activity::Tools::CertificateExport
        param:
          target_key: _export
          _map_key_format: $key_format
          _map_cert_identifier: $cert_identifier
          _map_key_password: $_password
          _map_alias: $alias
          _map_export_password: '[% IF context.unencrypted; ""; ELSE; context.export_password; END %]'
          _map_unencrypted: $unencrypted

    setfile_pkcs12:
        class: OpenXPKI::Server::Workflow::Activity::Tools::SetContextHash
        param:
          target_key: _download
          _map_filename: "[% USE Certificate %][% Certificate.dn(context.cert_identifier, 'CN') %].p12"
          mime: application/x-pkcs12
          _map_data: $_export
          binary: 1

    setfile_pkcs8_pem:
        class: OpenXPKI::Server::Workflow::Activity::Tools::SetContextHash
        param:
          target_key: _download
          _map_filename: "[% USE Certificate %][% Certificate.dn(context.cert_identifier, 'CN') %].key"
          mime: application/pkcs8
          _map_data: $_export

    setfile_pkcs8_der:
        class: OpenXPKI::Server::Workflow::Activity::Tools::SetContextHash
        param:
          target_key: _download
          _map_filename: "[% USE Certificate %][% Certificate.dn(context.cert_identifier, 'CN') %].p8"
          mime: application/pkcs8
          _map_data: $_export
          binary: 1

    setfile_openssl_privkey:
        class: OpenXPKI::Server::Workflow::Activity::Tools::SetContextHash
        param:
          target_key: _download
          _map_filename: "[% USE Certificate %][% Certificate.dn(context.cert_identifier, 'CN') %].pem"
          mime: application/x-pem-file
          _map_data: $_export

    setfile_java_keystore:
        class: OpenXPKI::Server::Workflow::Activity::Tools::SetContextHash
        param:
          target_key: _download
          _map_filename: "[% USE Certificate %][% Certificate.dn(context.cert_identifier, 'CN') %].jks"
          mime: application/x-java-keystore
          _map_data: $_export
          binary: 1

    retry_password:
        class: OpenXPKI::Server::Workflow::Activity::Noop
        label: I18N_OPENXPKI_UI_WORKFLOW_ACTION_EXPORT_PRIVATEKEY_RETRY_PASSWORD_LABEL
        input:
         - _password


condition:
    is_pkcs12:
        class: Workflow::Condition::Evaluate
        param:
            test: $context->{key_format} =~ m{\APKCS12}

    is_pkcs8_pem:
        class: Workflow::Condition::Evaluate
        param:
            test: $context->{key_format} eq 'PKCS8_PEM'

    is_pkcs8_der:
        class: Workflow::Condition::Evaluate
        param:
            test: $context->{key_format} eq 'PKCS8_DER'

    is_openssl_privkey:
        class: Workflow::Condition::Evaluate
        param:
            test: $context->{key_format} eq 'OPENSSL_PRIVKEY'

    is_java_keystore:
        class: Workflow::Condition::Evaluate
        param:
            test: $context->{key_format} eq 'JAVA_KEYSTORE'

    key_exists:
        class: Workflow::Condition::Evaluate
        param:
            test: $context->{_export}


field:
    cert_identifier_hidden:
        name: cert_identifier
        type: hidden

    download:
        label: I18N_OPENXPKI_UI_EXPORT_PRIVATEKEY_FILENAME_LABEL
        name: _download
        format: download
        param:
            auto: 1

    alias:
        name: alias
        type: text
        label: I18N_OPENXPKI_UI_EXPORT_PRIVATEKEY_ALIAS_LABEL
        description: I18N_OPENXPKI_UI_EXPORT_PRIVATEKEY_ALIAS_DESC
        placeholder: I18N_OPENXPKI_UI_EXPORT_PRIVATEKEY_ALIAS_PLACEHOLDER

    _password:
        name: _password
        type: password
        required: 1
        label: I18N_OPENXPKI_UI_EXPORT_PRIVATEKEY_PASSWORD_LABEL
        description: I18N_OPENXPKI_UI_EXPORT_PRIVATEKEY_PASSWORD_DESC

    export_password:
        name: export_password
        type: passwordverify
        required: 0
        label: I18N_OPENXPKI_UI_EXPORT_PRIVATEKEY_EXPORT_PASSWORD_LABEL
        description: I18N_OPENXPKI_UI_EXPORT_PRIVATEKEY_EXPORT_PASSWORD_DESC
        tooltip: I18N_OPENXPKI_UI_EXPORT_PRIVATEKEY_EXPORT_PASSWORD_TOOLTIP

    unencrypted:
        name: unencrypted
        type: bool
        label: I18N_OPENXPKI_UI_EXPORT_PRIVATEKEY_UNENCRYPTED_LABEL
        description: I18N_OPENXPKI_UI_EXPORT_PRIVATEKEY_UNENCRYPTED_DESC

validator:
    keystore_alias:
        class: OpenXPKI::Server::Workflow::Validator::Regex
        arg:
         - $alias
        param:
            regex: "\\A [a-zA-Z0-9-_\\.]+ \\z"
            error: I18N_OPENXPKI_UI_KEYSTORE_ALIAS_CONTAINS_INVALID_CHARACTERS


acl:
    User:
        creator: self

    CA Operator:
        creator: any

    RA Operator:
        creator: any
        fail: 1
        resume: 1
        wakeup: 1
        history: 1
        techlog: 1
        attribute: 1
        context: 1

    System:
        creator: any
        fail: 1
        resume: 1
        wakeup: 1


